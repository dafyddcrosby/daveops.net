Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4

====== Ruby on Rails ======
@Ruby, @Ruby_on_Rails

.. TODO - http://ruby.railstutorial.org/ruby-on-rails-tutorial-book?version=3.2

===== Installing Rails =====

::

 gem install rails

===== Setting up Rails =====

::

 rails new app_name
 cd app_name
 rake db:create
 rails server # (on standalone machine)
 rails generate controller home index
 rm public/index.html
 # Uncomment the ''root :to => "home#index"'' line
 $EDITOR config/routes.rb

===== Scaffolding =====

::

 rails generate scaffold Post user:references title:string{50} content:text

===== Add indexes to migration =====

::

 rails g resource user name:index email:uniq

===== Using Dreamhost =====

* Passenger must be enabled for domain/subdomain
* Passenger assumes it's in production mode, touch tmp/restart.txt to have it reload pages
* For database ``rake db:migrate RAILS_ENV=production``

===== Validating Active Records =====

.. code-block:: ruby

 class Post < ActiveRecord::Base
   # ...
 
   validates :name,  :presence => true
   validates :title, :presence => true,
					 :length => { :minimum => 5 }
 end

==== Ensure uniqueness at the db level ====

# ``rails generate migration add_index_to_users_email``
# add to migration file under def change: ``add_index :users, :email, unique: true``
# ``bundle exec rake db:migrate``

===== Database =====


==== Migrate to new model ====

::

 rake db:migrate

==== Return to previous model ====

::

 rake db:rollback

===== Automated testing with guard and spork =====

*Add to Gemfile:

.. code-block:: ruby

 group :test, :development do
   gem 'guard-spork'
   gem 'spork'
   gem 'guard-rspec'
 end
 group :test do
   gem 'rb-inotify'
   gem 'libnotify'
 end

* run the following

::
 bundle exec guard init rspec
 bundle exec spork --bootstrap
 bundle exec guard init spork

* Add ``:cli => '--drb'`` to guard 'rspec'
* ``bundle exec guard``

===== Creating tables =====

.. code-block:: ruby

 create_table "contacts" do |t|
   t.integer  "user_id", :null => false
   t.string   "name", :null => false
   t.string   "phone", :limit => 40
   t.string   "email"
 end

===== Reset test database =====

::

 bundle exec rake db:test:prepare

===== Find code comment dev tags =====

To find TODO, FIXME, and OPTIMIZE comment tags, use ``rake notes``

===== Simple wins =====

* Use ``find_each`` instead of ``each`` when searching through large sets of iterables
* Use ``content_tag`` to avoid XSS hacks

===== Get versions =====

``rake about``

===== Links =====
* https://robertheaton.com/2013/07/22/how-to-hack-a-rails-app-using-its-secret-token/
